{
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev:aspida": "npm run build:aspida && cd packages/aspida && node bin/index.js --build",
    "dev:server": "npm run build:server && cd packages/aspida-server && node bin/index.js --build",
    "dev:openapi": "npm run build:openapi && cd packages/openapi2aspida && node samples/rimraf.js && node bin/index.js --build",
    "dev:mock": "npm run build:mock && cd packages/aspida-mock && aspida -b && node bin/index.js --build",
    "dev:path": "npm run build:path && cd packages/pathpida && node bin/index.js --build",
    "start:server": "cd packages/aspida-server && node bin/index.js --build && tsc --project tsconfig.server.json && node .aspida/$server.js",
    "build:aspida": "npm run rimraf -- aspida && cd packages/aspida && tsc --project tsconfig.build.json",
    "build:server": "npm run rimraf -- aspida-server && cd packages/aspida-server && tsc --project tsconfig.build.json",
    "build:axios": "npm run rimraf -- aspida-axios && cd packages/aspida-axios && tsc --project tsconfig.build.json",
    "build:fetch": "npm run rimraf -- aspida-fetch && cd packages/aspida-fetch && tsc --project tsconfig.build.json",
    "build:node-fetch": "npm run rimraf -- aspida-node-fetch && cd packages/aspida-node-fetch && tsc --project tsconfig.build.json",
    "build:ky": "npm run rimraf -- aspida-ky && cd packages/aspida-ky && tsc --project tsconfig.build.json",
    "build:openapi": "npm run rimraf -- openapi2aspida && cd packages/openapi2aspida && tsc --project tsconfig.build.json",
    "build:mock": "npm run rimraf -- aspida-mock && cd packages/aspida-mock && tsc --project tsconfig.build.json",
    "build:path": "npm run rimraf -- pathpida && cd packages/pathpida && tsc --project tsconfig.build.json",
    "rimraf": "node -e \"require('fs').rmdirSync('packages/' + process.argv[1] + '/dist', { recursive: true })\"",
    "release": "standard-version --skip.tag",
    "release:major": "npm run release -- --release-as major",
    "release:minor": "npm run release -- --release-as minor",
    "release:patch": "npm run release -- --release-as patch",
    "lint": "eslint --ext .js,.ts --ignore-path .gitignore .",
    "lint:fix": "npm run lint -- --fix",
    "test": "jest",
    "test:watch": "npm test -- --watch",
    "typecheck": "npm run build:aspida && npm run build:mock && npm run build:axios && npm run build:server && tsc --noEmit"
  },
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-conventional": "^8.3.4",
    "@types/jest": "^25.2.1",
    "@types/minimist": "^1.2.0",
    "@types/node-fetch": "^2.5.7",
    "@typescript-eslint/eslint-plugin": "2.31.0",
    "@typescript-eslint/parser": "^2.31.0",
    "axios": "^0.19.2",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-jest": "^23.9.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.3",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "husky": "^4.2.5",
    "jest": "^25.5.4",
    "ky": "^0.19.1",
    "lint-staged": "^10.2.2",
    "node-fetch": "^2.6.0",
    "prettier": "2.0.5",
    "standard-version": "^8.0.0",
    "ts-jest": "^25.5.0",
    "typescript": "^3.8.3"
  }
}
