openapi: 3.0.0
info:
  title: Application
  version: '1'
servers:
  - url: 'http://localhost:3000/v1'
    description: local
  - url: 'https://api.gulliver-works.com/v1'
    description: Prd
  - url: 'https://api-stg.gulliver-works.com/v1'
    description: Stg
  - url: 'https://api-dev.gulliver-woks.com/v1'
    description: Dev
paths:
  '/accounts/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ''
    get:
      summary: アカウントを取得する
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Account.v1.yaml
              examples:
                example-1: {}
      operationId: get-accounts-id
    patch:
      summary: アカウントを更新する
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Account.v1.yaml
      operationId: patch-accounts-id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
    delete:
      summary: アカウントを削除する
      tags:
        - Account
      responses:
        '204':
          description: No Content
      operationId: delete-accounts-id
  '/recruitments/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 募集を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Recruitment.v1.yaml
      operationId: get-recruitments-id
  '/accounts/{account_id}/interested_lists':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの気になるリスト一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  interested_lists:
                    type: array
                    items:
                      $ref: ../models/InterestedList.v1.yaml
      operationId: get-accounts-account_id-intested_list
      parameters: []
    post:
      summary: アカウントの気になるリストを作成する
      operationId: post-accounts-account_id-intested_list
      responses:
        '201':
          description: Created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interested_list:
                  type: object
                  properties:
                    name:
                      type: string
                    recruitment_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                  required:
                    - name
        description: ''
  '/interested_lists/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: 「気になるリスト」を削除する
      operationId: delete-accounts-account_id-interested_list-id
      responses:
        '204':
          description: No Content
    patch:
      summary: 「気になるリスト」を更新する
      operationId: patch-accounts-account_id-interested_list-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/InterestedList.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interested_list:
                  type: object
                  properties:
                    name:
                      type: string
                    recruitments:
                      type: array
                      items:
                        $ref: ../models/Recruitment.v1.yaml
    get:
      summary: 「気になるリスト」を取得する
      operationId: get-accounts-account_id-interested_lists-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/InterestedList.v1.yaml
  '/accounts/{account_id}/followings':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのフォロー一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  followings:
                    type: array
                    items:
                      $ref: ../models/Company.v1.yaml
      operationId: get-accounts-account_id-following
    post:
      summary: アカウントのフォローを作成する
      operationId: post-accounts-account_id-following
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Company.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                following:
                  type: object
                  properties:
                    company_id:
                      type: string
                      format: uuid
                  required:
                    - company_id
  '/followings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: フォローを削除する
      operationId: delete-accounts-account_id-following-id
      responses:
        '204':
          description: No Content
  /recruitments:
    get:
      summary: 募集一覧（募集検索）を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recruitments:
                    type: array
                    items:
                      $ref: ../models/Recruitment.v1.yaml
      operationId: get-recruitments
      parameters:
        - schema:
            type: string
          in: query
          name: 'occupation_ids[]'
          description: 職種
        - schema:
            type: string
          in: query
          name: 'industry_ids[]'
          description: 業種
        - schema:
            type: string
          in: query
          name: 'workplace_ids[]'
          description: 勤務地
        - schema:
            type: string
          in: query
          name: 'employment_status_ids[]'
          description: 雇用形態
        - schema:
            type: string
          in: query
          name: type
          description: タイプ
        - schema:
            type: integer
          in: query
          name: max_income
          description: 最高金額
        - schema:
            type: integer
          in: query
          name: min_income
          description: 最低金額
        - schema:
            type: string
          in: query
          name: keyword
          description: キーワード
  '/accounts/{account_id}/notifications':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの通知一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_notifications:
                    type: array
                    items:
                      $ref: ../models/AccountNotification.v1.yaml
      operationId: get-accounts-account_id-notifications
  '/accounts/{account_id}/rooms':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのトークルーム一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      $ref: ../models/Room.v1.yaml
      operationId: get-accounts-account_id-messages
    post:
      summary: トークルームを作成する
      operationId: post-accounts-account_id-rooms
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Room.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                room:
                  type: object
                  properties:
                    company_id:
                      type: string
                      format: uuid
                  required:
                    - company_id
  '/rooms/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: トークルームを取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Room.v1.yaml
      operationId: get-accounts-account_id-rooms-id
  '/rooms/{room_id}/messages':
    parameters:
      - schema:
          type: string
        name: room_id
        in: path
        required: true
    get:
      summary: ルームのメッセージ一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: ../models/Message.v1.yaml
      operationId: get-accounts-account_id-rooms-room_id-messages
    post:
      summary: ルームのメッセージを作成する
      operationId: post-accounts-account_id-rooms-room_id-messages
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Message.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
                  properties:
                    account_id:
                      type: string
                      format: uuid
                    content:
                      type: string
                      example: 初めまして。XXXと申します。
                    attachment:
                      type: object
                      description: 添付ファイルのこと、つかいたかはSpecのREADME見て
                  required:
                    - account_id
                    - content
  '/messages/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: メッセージを取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Message.v1.yaml
      operationId: get-messages-id
  '/accounts/{account_id}/applicants':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの応募一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  applicants:
                    type: array
                    items:
                      $ref: ../models/Applicant.v1.yaml
      operationId: get-accounts-account_id-applicants
    post:
      summary: アカウントの応募を作成する
      operationId: post-accounts-account_id-applicants
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Applicant.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                applicant:
                  type: object
                  properties:
                    recruitment_id:
                      type: string
                      format: uuid
                  required:
                    - recruitment_id
        description: ''
  '/work_histories/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 職歴を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/WorkHistory.v1.yaml
      operationId: get-work_histories-id
    patch:
      summary: 職歴を更新する
      operationId: patch-work_histories-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/WorkHistory.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_history:
                  type: object
                  properties:
                    is_employed:
                      type: boolean
                      description: 「在職中」「離職中」
                      example: 'true'
                      default: 'true'
                    occupation_id:
                      type: string
                      format: uuid
                    industry_id:
                      type: string
                      format: uuid
                    position:
                      type: string
                      example: 主任
                    annual_income:
                      type: number
                      example: 4000000
                    management_experience:
                      type: integer
                      example: 3
                    job_summary:
                      type: string
                      example: Ruby on Railsを使ったバックエンド開発
                    since_date:
                      type: string
                      format: date
                      example: '2019-08-01'
                    until_date:
                      format: date
                      example: '2020-05-01'
                      type: string
                    name:
                      type: string
                      example: 株式会社SIMULA Labs
    delete:
      summary: 職歴を削除する
      operationId: delete-work_histories-id
      responses:
        '204':
          description: No Content
  '/academic_histories/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 学歴を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/AcademicHistory.v1.yaml
      operationId: get-academic_histories-id
    patch:
      summary: 学歴を更新する
      operationId: patch-academic_histories-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/AcademicHistory.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academic_history:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 明治大学
                    faculty:
                      type: string
                      example: 情報コミュニケーション学部
                    since_date:
                      type: string
                      format: date
                      example: 2008-04
                    until_date:
                      type: string
                      format: date
                      example: 2012-03
                    type:
                      type: string
                      example: university
                      enum:
                        - graduate_school
                        - university
                        - vocational_school
                        - junior_college
                        - high_school
                      description: 「大学院」「大学」「専門学校」「短期大学」「高校」
    delete:
      summary: 学歴を削除する
      operationId: delete-academic_histories-id
      responses:
        '204':
          description: No Content
  '/accounts/{account_id}/work_histories':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの職歴一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  work_histories:
                    type: array
                    items:
                      $ref: ../models/WorkHistory.v1.yaml
      operationId: get-accounts-account_id-work_histories
    post:
      summary: アカウントの職歴を作成する
      operationId: post-accounts-account_id-work_histories
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/WorkHistory.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                work_history:
                  type: object
                  properties:
                    is_employed:
                      type: boolean
                      description: 「在職中」「離職中」
                      example: 'true'
                      default: 'true'
                    occupation_id:
                      type: string
                      format: uuid
                    industry_id:
                      type: string
                      format: uuid
                    position:
                      type: string
                      example: 主任
                    annual_income:
                      type: number
                      example: 4000000
                    management_experience:
                      type: integer
                      example: 3
                    job_summary:
                      type: string
                      example: Ruby on Railsを使ったバックエンド開発
                    since_date:
                      type: string
                      format: date
                      example: '2019-08-01'
                    until_date:
                      format: date
                      example: '2020-05-01'
                      type: string
                    name:
                      type: string
                      example: 株式会社SIMULA Labs
                  required:
                    - is_employed
                    - occupation_id
                    - industry_id
                    - position
                    - annual_income
                    - management_experience
                    - since_date
                    - name
        description: ''
  '/accounts/{account_id}/academic_histories':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントの学歴一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  academic_histories:
                    type: array
                    items:
                      $ref: ../models/AcademicHistory.v1.yaml
      operationId: get-accounts-account_id-academic_histories
    post:
      summary: アカウントの学歴を作成する
      operationId: post-accounts-account_id-academic_histories
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/AcademicHistory.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                academic_history:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 明治大学
                    faculty:
                      type: string
                      example: 情報コミュニケーション学部
                    since_date:
                      type: string
                      format: date
                      example: 2008-04
                    until_date:
                      type: string
                      format: date
                      example: 2012-03
                    type:
                      type: string
                      example: university
                      enum:
                        - graduate_school
                        - university
                        - vocational_school
                        - junior_college
                        - high_school
                      description: 「大学院」「大学」「専門学校」「短期大学」「高校」
                  required:
                    - name
                    - since_date
                    - until_date
                    - type
        description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
      description: ''
  '/accounts/{account_id}/profile':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    get:
      summary: アカウントのプロフィールを取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/AccountProfile.v1.yaml
      operationId: get-accounts-account_id-profile
    post:
      summary: アカウントのプロフィールを作成する
      operationId: post-accounts-account_id-profile
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/AccountProfile.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: 太郎
                    last_name:
                      type: string
                      example: 山田
                    first_name_kana:
                      type: string
                      example: タロウ
                    last_name_kana:
                      type: string
                      example: ヤマダ
                    gender:
                      type: string
                      enum:
                        - MALE
                        - FEMALE
                        - OTHER
                      example: MALE
                    phone:
                      type: string
                      example: 090-XXXX-XXXX
                    postal_code:
                      type: string
                      example: 107-0051
                    address:
                      type: string
                      example: 東京都港区元赤坂1-7-18
                    date_of_birth:
                      type: string
                      format: date
                    biography:
                      type: string
                      example: 自己PR/紹介
                  required:
                    - first_name
                    - last_name
                    - first_name_kana
                    - last_name_kana
                    - gender
                    - phone
                    - date_of_birth
        description: ''
    patch:
      summary: アカウントのプロフィールを更新する
      operationId: patch-accounts-account_id-profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/AccountProfile.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: 太郎
                    last_name:
                      type: string
                      example: 山田
                    first_name_kana:
                      type: string
                      example: タロウ
                    last_name_kana:
                      type: string
                      example: ヤマダ
                    gender:
                      type: string
                      enum:
                        - MALE
                        - FEMALE
                        - OTHER
                      example: MALE
                    phone:
                      type: string
                      example: 090-XXXX-XXXX
                    postal_code:
                      type: string
                      example: 107-0051
                    address:
                      type: string
                      example: 東京都港区元赤坂1-7-18
                    date_of_birth:
                      type: string
                      format: date
                    biography:
                      type: string
                      example: 自己PR/紹介
        description: ''
  /occupation_main_categories:
    get:
      summary: 職種一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  occupation_main_categories:
                    type: array
                    items:
                      $ref: ../models/OccupationMainCategory.v1.yaml
      operationId: get-occupation_main_categories
      description: 「大項目」「中項目」「小項目」まとめて全部取得する
  /industry_categories:
    get:
      summary: 業種一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  industry_categories:
                    type: array
                    items:
                      $ref: ../models/IndustryCategory.v1.yaml
      operationId: get-industry_categories
      description: 業種まとめて全部取得する
  /employment_statuses:
    get:
      summary: 雇用形態一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  employment_statuses:
                    type: array
                    items:
                      $ref: ../models/EmploymentStatus.v1.yaml
      operationId: get-employment_statuses
      parameters:
        - schema:
            type: string
            enum:
              - project
              - career
          in: query
          name: type
    parameters: []
  '/interested_lists/{interested_list_id}/recruitments':
    parameters:
      - schema:
          type: string
        name: interested_list_id
        in: path
        required: true
    post:
      summary: 気になるリストに募集を追加する
      operationId: post-interested_lists-interested_list_id-recruitments
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/InterestedList.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                interested_list:
                  type: object
                  properties:
                    recruitment_id:
                      type: string
                      format: uuid
                  required:
                    - recruitment_id
  '/interested_lists/{interested_list_id}/recruitments/{id}':
    parameters:
      - schema:
          type: string
        name: interested_list_id
        in: path
        required: true
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: 気になるリストから募集を削除する
      operationId: delete-interested_lists-interested_list_id-recruitments-id
      responses:
        '204':
          description: No Content
  '/companies/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 企業取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Company.v1.yaml
      operationId: get-companies-id
      description: ''
  /companies:
    get:
      summary: 企業一覧取得
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    $ref: ../models/Company.v1.yaml
      operationId: get-companies
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
          description: 検索キーワード
  '/accounts/{account_id}/mark_as_read':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: 通知に既読をつける
      operationId: post-accounts-account_id-mark_as_read
      responses:
        '204':
          description: No Content
  '/accounts/{account_id}/hopes':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
    post:
      summary: アカウントの希望条件を作成する
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/Hope.v1.yaml
      operationId: post-accounts-account_id-hopes
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hope:
                  type: object
                  required:
                    - time_to_change_job
                    - annual_income
                    - type
                    - workplace_id
                    - employment_status_ids
                    - occupation_ids
                  properties:
                    time_to_change_job:
                      type: number
                      description: 何ヶ月以内に転職したいか
                    annual_income:
                      type: number
                    type:
                      type: string
                      enum:
                        - career
                        - project
                    workplace_id:
                      type: string
                      format: uuid
                      description: StateのID
                    employment_status_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    occupation_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
              required:
                - hope
        description: ''
    get:
      summary: アカウントの希望一覧を取得する
      operationId: get-accounts-account_id-hope
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hopes:
                    type: array
                    items:
                      $ref: ../models/Hope.v1.yaml
  /companies/recommended:
    get:
      summary: おすすめの企業一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Company.v1.yaml
      operationId: get-companies-recommended
      description: 希望の職種・雇用形態からおすすめの企業をいくつか取得する
  /recruitments/recommended:
    get:
      summary: おすすめの募集一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ../models/Recruitment.v1.yaml
      operationId: get-recruitments-recommended
      description: 希望の職種・募集形態からおすすめの募集をいくつか取得する
  '/companies/{company_id}/recruitments':
    parameters:
      - schema:
          type: string
        name: company_id
        in: path
        required: true
    get:
      summary: 企業の募集一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  recruitments:
                    type: array
                    items:
                      $ref: ../models/Recruitment.v1.yaml
      operationId: get-companies-company_id-recruitments
  '/hopes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: 希望条件を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Hope.v1.yaml
      operationId: get-hopes-id
    patch:
      summary: 希望条件を更新する
      operationId: patch-hopes-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/Hope.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hope:
                  type: object
                  properties:
                    time_to_change_job:
                      type: number
                      description: 何ヶ月以内に転職したいか
                    annual_income:
                      type: number
                    type:
                      type: string
                      enum:
                        - career
                        - project
                    workplace_id:
                      type: string
                      format: uuid
                      description: StateのID
                    employment_status_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    occupation_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
  /prefectures:
    get:
      summary: 都道府県一覧を取得する
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  prefectures:
                    type: array
                    items:
                      $ref: ../models/Prefecture.v1.yaml
      operationId: get-prefectures
components:
  schemas: {}
  securitySchemes: {}
