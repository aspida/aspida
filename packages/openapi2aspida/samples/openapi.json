{
  "info": {
    "title": "tchop app",
    "version": "0.0.1",
    "description": "### API - General Info\n\n[Learn more of the tchop principle (structure of mixes and cards)](https://tchop.io/principle).\n\nThe list below contains internal TCHOP API routes that are used by internal components.\nExternal API routes are mapped to internal routes by Nginx load balancer by extracting organization and channel name and prepending them to URL path.\n\n- `/api/some-path` -> https://tchop.io/api/some-path\n\n- `/organisation/api/some-path` -> https://[organisation].tchop.io/api/some-path\n\n- `/channel/api/some-path` -> https://[channel]-[organisation].tchop.io/api/some-path\n\nAPI versioning is supported:\n\nMask: `/api/[version]/some-path`\n\n- `/api/v1/some-path`\n- `/api/v2/some-path`\n\n\n### Mobile API\n\nRoute: `/api/v3`\n\nMobile routers are have their own authorization system. In order to retrieve authentication token call `/api/v3/login`,\nthen use token in `x-tchop-token` header.\n\nMobile routers are of the following types:\n\n- `user` - User management and session controlling\n\n- `channel` - Get channels list and channel info\n\n- `extension` - Parsing images, articles and social posts (twitter, facebook, instagram)\n\n- `chats` - Chat management\n\n### Output Stream API\n\nRoute: `/api/stream/v1`\n\nOutput Stream API allows you to deliver content of your channel to different platforms in a simple way.\n\nIn order to use Output Stream API you must have a valid token.\nIt can be created on the developer page of your channel ([My Profile](https://tchop.io/me) -> Channel -> Developers)\n\nAPI key belongs to the channel/organisation and has no expiration date.\n\n\\* There's also a deprecated route that doesn't support pagination: `/channel/api/v3/mixes`\n"
  },
  "openapi": "3.0.0",
  "servers": [],
  "paths": {
    "/api/v1/me": {
      "get": {
        "summary": "Get current user info",
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["userId", "screenName", "email", "isStaff"],
                  "properties": {
                    "userId": { "type": "number" },
                    "screenName": { "type": "string" },
                    "email": { "type": "string" },
                    "isStaff": { "type": "boolean" },
                    "channelName": { "type": "string" },
                    "channelId": { "type": "number" },
                    "url": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/parse": {
      "post": {
        "summary": "Get raw data without saving",
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    { "$ref": "#/components/schemas/ArticleModel" },
                    { "$ref": "#/components/schemas/QuoteModel" }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["url"],
                "properties": { "url": { "type": "string", "format": "url" } }
              }
            }
          }
        }
      }
    },
    "/api/v1/parse/image": {
      "post": {
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["imageId"],
                  "properties": { "imageId": { "type": "number" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Image to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "rightholder": { "type": "string" },
                  "statusCopyright": {
                    "type": "string",
                    "enum": ["unknown", "cc", "licensed", "sublicensed"],
                    "default": "unknown"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v1/token": {
      "post": {
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["token"],
                  "properties": { "token": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["organisationSubdomain", "channelSubdomain", "userId"],
                "properties": {
                  "organisationSubdomain": { "type": "string" },
                  "channelSubdomain": { "type": "string" },
                  "userId": { "type": "number" }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mixes": {
      "get": {
        "summary": "Get available mixes by assigned connection",
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": ["id", "createdByCurrentClientAPI", "title"],
                    "properties": {
                      "id": { "type": "number" },
                      "title": { "type": "number" },
                      "createdByCurrentClientAPI": { "type": "boolean" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates new mix. Only dashboard or same type of integration can update/delete this mix",
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": { "name": { "type": "string" }, "title": { "type": "string" } }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "number" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mixes/{id}": {
      "put": {
        "summary": "Updates mix. Only dashboard or same type of integration can update this mix",
        "tags": ["integrations"],
        "security": [{ "ApiIntegrationAuth": [] }],
        "parameters": [
          { "in": "path", "name": "id", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": { "name": { "type": "string" }, "title": { "type": "string" } }
              }
            }
          }
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/v1/mixes/{mixId}/cards": {
      "post": {
        "tags": ["integrations"],
        "summary": "Save item in the current mix by raw data",
        "security": [{ "ApiIntegrationAuth": [] }],
        "parameters": [
          { "in": "path", "name": "mixId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "OK" } },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": { "type": "string", "$ref": "#/components/schemas/CardEnumModel" },
                  "title": { "type": "string" },
                  "abstract": { "type": "string" },
                  "sourceName": { "type": "string" },
                  "image": { "type": "string", "format": "url" },
                  "imageId": { "type": "string" },
                  "quotePerson": { "type": "string" },
                  "quote": { "type": "string" },
                  "url": { "type": "string" },
                  "quotePersonImageId": { "type": "string" },
                  "quotePersonImage": { "type": "string", "format": "url" },
                  "quoteSource": { "type": "string" },
                  "quotePersonHandle": { "type": "string" },
                  "videoId": { "type": "string" },
                  "text": { "type": "string" },
                  "headline": { "type": "string" },
                  "quoteCreated": { "type": "string" },
                  "published": { "type": "boolean", "default": true }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/mixes/{mixId}/url": {
      "post": {
        "tags": ["integrations"],
        "summary": "Parse and save item in the current mix by URL",
        "security": [{ "ApiIntegrationAuth": [] }],
        "parameters": [
          { "in": "path", "name": "mixId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "204": { "description": "OK" } },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": { "type": "string", "format": "url" },
                  "published": { "type": "boolean" },
                  "enableImage": { "type": "boolean" }
                },
                "required": ["url"]
              }
            }
          }
        }
      }
    },
    "/api/stream/v1/stories": {
      "get": {
        "tags": ["stream"],
        "security": [{ "ApiStreamAuth": [] }],
        "description": "It returns all stories with first 75 cards",
        "parameters": [
          { "in": "query", "name": "token", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ModelMixV3" } }
            }
          }
        }
      }
    },
    "/api/stream/v1/stories/{storyId}/": {
      "get": {
        "tags": ["stream"],
        "security": [{ "ApiStreamAuth": [] }],
        "parameters": [
          { "in": "query", "name": "token", "schema": { "type": "string" }, "required": true },
          { "in": "path", "name": "storyId", "schema": { "type": "number" }, "required": true },
          { "in": "query", "name": "offset", "schema": { "type": "number", "default": 0 } },
          { "in": "query", "name": "limit", "schema": { "type": "number", "default": 75 } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["count", "limit", "data"],
                  "properties": {
                    "count": { "type": "number" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ModelCard" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          {
            "in": "query",
            "name": "unpublished",
            "schema": { "type": "boolean", "default": false }
          },
          { "in": "query", "name": "read-only", "schema": { "type": "boolean", "default": true } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "id",
                      "name",
                      "role",
                      "subdomain",
                      "created",
                      "ownerEmail",
                      "ownerName",
                      "ownerId",
                      "organisationId",
                      "stories",
                      "url"
                    ],
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" },
                      "role": { "type": "string" },
                      "created": { "type": "string" },
                      "subdomain": { "type": "string" },
                      "url": { "type": "string", "format": "url" },
                      "ownerEmail": { "type": "string" },
                      "ownerName": { "type": "string" },
                      "organisationName": { "type": "string" },
                      "ownerId": { "type": "number" },
                      "organisationId": { "type": "number" },
                      "pinnedStoryId": { "type": "number" },
                      "stories": {
                        "type": "array",
                        "items": {
                          "required": [
                            "id",
                            "title",
                            "ownerId",
                            "status",
                            "allowAccessToEditorLimited"
                          ],
                          "properties": {
                            "id": { "type": "number" },
                            "title": { "type": "number" },
                            "status": { "type": "string" },
                            "ownerId": { "type": "number" },
                            "allowAccessToEditorLimited": { "type": "boolean" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/notifications": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "query", "name": "published", "schema": { "type": "boolean" } },
          { "in": "query", "name": "offset", "schema": { "type": "number", "default": 0 } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": { "type": "number" },
                    "limit": { "type": "number" },
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id",
                          "message",
                          "title",
                          "priority",
                          "isSent",
                          "ownerId",
                          "organisationId",
                          "deliveringTime",
                          "expirationTime",
                          "created"
                        ],
                        "properties": {
                          "id": { "type": "number" },
                          "message": { "type": "string" },
                          "title": { "type": "string" },
                          "priority": { "type": "string", "enum": ["normal", "high"] },
                          "isSent": { "type": "boolean" },
                          "ownerId": { "type": "string" },
                          "organisationId": { "type": "number" },
                          "deliveringTime": { "type": "string", "format": "data" },
                          "expirationTime": { "type": "string", "format": "data" },
                          "created": { "type": "string", "format": "data" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "description": "Returns a list of channel mixes with pre-fetching their contents",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          {
            "in": "query",
            "name": "excludeItems",
            "schema": { "type": "boolean", "default": false }
          },
          {
            "in": "query",
            "name": "excludePinned",
            "schema": { "type": "boolean", "default": true }
          }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/v3/stories/{storyId}/items": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "description": "Returns a story content with support pagination",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "storyId", "required": true, "schema": { "type": "number" } },
          { "in": "query", "name": "offset", "schema": { "type": "number", "default": 0 } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["data", "limit", "offset"],
                  "properties": {
                    "limit": { "type": "number" },
                    "offset": { "type": "number" },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ModelCard" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/chats/keys": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns valid pubnub keys and auth token, refreshes tokens and access if needed",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserPublicKey" },
          { "$ref": "#/components/parameters/UserSignedChallenge" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Should be used as authKey when initializing pubnub instance"
                    },
                    "publishKey": { "type": "string" },
                    "subscribeKey": { "type": "string" },
                    "cipherKey": { "type": "string" },
                    "senderDevice": {
                      "type": "object",
                      "description": "should be used with sending message to prevent self pushes",
                      "properties": {
                        "ios": { "type": "array", "items": { "type": "string" } },
                        "android": { "type": "array", "items": { "type": "string" } }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns users chats in channel",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "chatId": { "type": "number" },
                    "chatDescriptor": { "type": "string" },
                    "channelId": { "type": "number" },
                    "organisationId": { "type": "number" },
                    "storyId": { "description": "Pinned mix ID", "type": "number" },
                    "itemId": { "description": "Pinned card ID", "type": "number" },
                    "pinnedContent": {
                      "type": "object",
                      "properties": { "pinType": { "type": "string", "enum": ["mix", "card"] } }
                    },
                    "storyIdPinned": {
                      "description": "ID of mix of shared cards",
                      "type": "number"
                    },
                    "type": { "type": "string", "enum": ["group", "p2p"] },
                    "accessType": {
                      "type": "string",
                      "enum": ["private", "publicRead", "publicWrite"]
                    },
                    "usersCount": { "type": "number" },
                    "name": { "type": "string", "maxLength": 100 },
                    "payload": { "type": "string", "maxLength": 200 },
                    "access": {
                      "description": "User access to chat",
                      "type": "string",
                      "enum": ["admin", "banned", "r", "rw"]
                    },
                    "thumbnails": {
                      "type": "array",
                      "description": "Array of available members images or initials",
                      "items": {
                        "type": "object",
                        "properties": {
                          "image": { "type": "string" },
                          "initials": { "type": "string" }
                        }
                      }
                    },
                    "level": { "type": "string", "enum": ["channel", "organisation"] },
                    "recipientId": {
                      "type": "number",
                      "description": "Id of recipient user if p2p"
                    },
                    "created": { "type": "string" },
                    "updated": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      },
      "put": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Updates chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 3, "maxLength": 200 },
                  "accessType": {
                    "type": "string",
                    "enum": ["private", "publicWrite", "publicRead"]
                  },
                  "payload": { "type": "string", "maxLength": 200 },
                  "storyId": { "type": "number" },
                  "itemId": { "type": "number" },
                  "level": { "type": "string", "enum": ["channel", "organisation"] }
                }
              }
            }
          },
          "required": true
        }
      },
      "delete": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Deletes chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/chats": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns users chats in channel",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserPublicKey" },
          { "$ref": "#/components/parameters/UserSignedChallenge" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "chats": {
                      "type": "array",
                      "description": "array of chats",
                      "items": {
                        "type": "object",
                        "properties": {
                          "access": { "type": "string", "enum": ["admin", "r", "w", "banned"] },
                          "chatId": { "type": "number" },
                          "chatDescriptor": { "type": "string" },
                          "channelId": { "type": "number" },
                          "organisationId": { "type": "number" },
                          "name": { "type": "string", "maxLength": 100 },
                          "payload": { "type": "string", "maxLength": 200 },
                          "type": { "type": "string", "enum": ["group", "p2p"] },
                          "accessType": {
                            "type": "string",
                            "enum": ["private", "publicWrite", "publicRead"]
                          },
                          "storyId": { "description": "pinned mix ID", "type": "number" },
                          "itemId": { "description": "pinned card ID", "type": "number" },
                          "storyIdPinned": {
                            "description": "ID of mix of shared cards",
                            "type": "number"
                          },
                          "storyPinnedEmpty": {
                            "description": "if there are no pinned content in hidden mix",
                            "type": "boolean"
                          },
                          "usersCount": { "type": "number" },
                          "publicToJoin": {
                            "description": "true if chat is public and user can join, false if user has already joined chat",
                            "type": "boolean"
                          },
                          "thumbnails": {
                            "type": "array",
                            "description": "Array of available members images or initials",
                            "items": {
                              "type": "object",
                              "properties": {
                                "image": { "type": "string" },
                                "initials": { "type": "string" }
                              }
                            }
                          },
                          "level": { "type": "string", "enum": ["channel", "organisation"] },
                          "recipientId": {
                            "type": "number",
                            "description": "Id of recipient user if p2p"
                          },
                          "created": { "type": "string" },
                          "updated": { "type": "string" }
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "description": "Should be used as authKey when initializing pubnub instance"
                    },
                    "publishKey": { "type": "string" },
                    "subscribeKey": { "type": "string" },
                    "cipherKey": { "type": "string" },
                    "senderDevice": {
                      "type": "object",
                      "description": "should be used with sending message to prevent self pushes",
                      "properties": {
                        "ios": { "type": "array", "items": { "type": "string" } },
                        "android": { "type": "array", "items": { "type": "string" } }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Creates chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "chatId": { "type": "number" },
                    "chatDescriptor": { "type": "string" },
                    "channelId": { "type": "number" },
                    "organisationId": { "type": "number" },
                    "storyId": { "description": "Pinned mix ID", "type": "number" },
                    "itemId": { "description": "Pinned card ID", "type": "number" },
                    "pinnedContent": {
                      "type": "object",
                      "properties": { "pinType": { "type": "string", "enum": ["mix", "card"] } }
                    },
                    "type": { "type": "string", "enum": ["group", "p2p"] },
                    "accessType": {
                      "type": "string",
                      "enum": ["private", "publicRead", "publicWrite"]
                    },
                    "usersCount": { "type": "number" },
                    "name": { "type": "string", "maxLength": 100 },
                    "payload": { "type": "string", "maxLength": 200 },
                    "access": {
                      "description": "User access to chat",
                      "type": "string",
                      "enum": ["admin", "banned", "r", "rw"]
                    },
                    "thumbnails": {
                      "type": "array",
                      "description": "Array of available members images or initials",
                      "items": {
                        "type": "object",
                        "properties": {
                          "image": { "type": "string" },
                          "initials": { "type": "string" }
                        }
                      }
                    },
                    "level": { "type": "string", "enum": ["channel", "organisation"] },
                    "recipientId": {
                      "type": "number",
                      "description": "Id of recipient user if p2p"
                    },
                    "created": { "type": "string" },
                    "updated": { "type": "string" }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": { "type": "string" },
                    "message": { "type": "string" },
                    "chatId": {
                      "description": "if chat with user already exists",
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "type", "accessType", "level"],
                "properties": {
                  "name": { "type": "string", "minLength": 3, "maxLength": 200 },
                  "type": { "type": "string", "enum": ["p2p", "group"] },
                  "level": { "type": "string", "enum": ["channel", "organisation"] },
                  "accessType": {
                    "type": "string",
                    "enum": ["private", "publicRead", "publicWrite"]
                  },
                  "payload": { "type": "string", "maxLength": 200 },
                  "storyId": { "type": "number", "description": "Mix to pin" },
                  "itemId": { "type": "number", "description": "Card to pin" },
                  "users": {
                    "description": "Array of users to add with 'rw' rights (without you). If type = 'p2p' should contain only one item",
                    "type": "array",
                    "items": { "type": "number" }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/users": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns chat members with deleted",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "email": { "type": "string" },
                      "screenName": { "type": "string" },
                      "access": { "type": "string", "enum": ["admin", "r", "rw", "banned"] },
                      "isDeleted": { "type": "number" },
                      "imageUrl": { "type": "string" },
                      "initials": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Adds members to chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "201": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "description": "List of user IDs to add",
                    "items": { "type": "number" }
                  },
                  "bannedUsers": {
                    "type": "array",
                    "description": "List of users IDs. Disables sending add-service-message about users with these IDs.",
                    "items": { "type": "number" }
                  },
                  "self": {
                    "description": "If true: will add user to public chat",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        }
      },
      "put": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Updates chat members",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["users"],
                "properties": {
                  "users": {
                    "type": "array",
                    "description": "To change users self should contain only one item with current user ID",
                    "minItems": 1,
                    "items": {
                      "format": "object",
                      "required": ["id"],
                      "properties": {
                        "id": { "type": "number", "description": "User ID" },
                        "chatHidden": {
                          "type": "boolean",
                          "description": "It is only allowed to change self chatHidden property"
                        },
                        "access": {
                          "type": "string",
                          "description": "It is only allowed to change other members access (if current user has chat admin access)",
                          "enum": ["r", "rw", "admin", "banned"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/users/remove": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Removes members from chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "type": "array",
                    "description": "List of user IDs to remove",
                    "items": { "type": "number" }
                  },
                  "self": {
                    "description": "If true: will remove user from chat",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/extension/parse": {
      "post": {
        "tags": ["extension"],
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["type", "url"],
                  "properties": {
                    "type": { "type": "string", "$ref": "#/components/schemas/CardEnumModel" },
                    "url": { "type": "string" },
                    "sourceName": { "type": "string" },
                    "abstract": { "type": "string" },
                    "quotePerson": { "type": "string" },
                    "quotePersonHandle": { "type": "string" },
                    "quote": { "type": "string" },
                    "quoteSource": { "type": "string" },
                    "quoteCreated": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["url"],
                "properties": { "url": { "type": "string", "format": "url" } }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/extension/image": {
      "post": {
        "tags": ["extension"],
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": {
                    "id": { "type": "string" },
                    "width": { "type": "number", "default": 0 },
                    "height": { "type": "number", "default": 0 }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Image to upload.",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/extension/video": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["extension"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": {
                    "id": { "type": "string" },
                    "width": { "type": "number", "default": 0 },
                    "height": { "type": "number", "default": 0 }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "video to upload.",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/extension/audio": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["extension"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "audio to upload.",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/extension/story/{storyId}": {
      "post": {
        "tags": ["extension"],
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "storyId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": { "$ref": "#/components/schemas/CardEnumModel" },
                  "caption": { "type": "string" },
                  "title": { "type": "string" },
                  "abstract": { "type": "string" },
                  "sourceName": { "type": "string" },
                  "image": { "type": "string", "format": "url" },
                  "imageId": { "type": "number" },
                  "quotePerson": { "type": "string" },
                  "quote": { "type": "string" },
                  "url": { "type": "string", "format": "url" },
                  "quotePersonImageId": { "type": "number" },
                  "quotePersonImage": { "type": "string", "format": "url" },
                  "quoteSource": { "type": "string" },
                  "quotePersonHandle": { "type": "string" },
                  "videoId": { "type": "number" },
                  "video": { "type": "string", "format": "binary" },
                  "audioId": { "type": "number" },
                  "audio": { "type": "string", "format": "binary" },
                  "text": { "type": "string" },
                  "headline": { "type": "string" },
                  "quoteCreated": { "type": "string" },
                  "published": { "type": "boolean", "default": false }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": { "$ref": "#/components/schemas/CardEnumModel" },
                  "caption": { "type": "string" },
                  "title": { "type": "string" },
                  "abstract": { "type": "string" },
                  "sourceName": { "type": "string" },
                  "image": { "type": "string", "format": "url" },
                  "imageId": { "type": "number" },
                  "quotePerson": { "type": "string" },
                  "quote": { "type": "string" },
                  "url": { "type": "string", "format": "url" },
                  "quotePersonImageId": { "type": "number" },
                  "quotePersonImage": { "type": "string", "format": "url" },
                  "quoteSource": { "type": "string" },
                  "quotePersonHandle": { "type": "string" },
                  "videoId": { "type": "number" },
                  "video": { "type": "number" },
                  "audioId": { "type": "number" },
                  "audio": { "type": "number" },
                  "text": { "type": "string" },
                  "headline": { "type": "string" },
                  "quoteCreated": { "type": "string" },
                  "published": { "type": "boolean", "default": false }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/items/{itemId}": {
      "post": {
        "tags": ["chats"],
        "security": [{ "ApiMobileAuth": [] }],
        "summary": "Posts (creates reference) the exist card to the chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "number" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "number" } },
          { "in": "path", "name": "itemId", "required": true, "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["ok"],
                  "properties": { "ok": { "type": "boolean" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "formattedText": { "type": "string", "example": "Hello, look at this card" }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/chats/{chatId}/items/{itemId}": {
      "post": {
        "tags": ["chats"],
        "security": [{ "ApiMobileAuth": [] }],
        "summary": "Posts (creates reference) the exist card to the chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "number" } },
          { "in": "path", "name": "itemId", "required": true, "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["ok"],
                  "properties": { "ok": { "type": "boolean" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "formattedText": { "type": "string", "example": "Hello, look at this card" }
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "number" } },
          { "in": "path", "name": "itemId", "required": true, "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ModelCard" } }
            }
          },
          "400": {
            "description": "Field validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorValidationModel" }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/extension/story/{storyId}/image": {
      "post": {
        "tags": ["extension"],
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "storyId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Image to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "text": { "type": "string" },
                  "published": { "type": "boolean", "default": false }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/extension/story/{storyId}/video": {
      "post": {
        "tags": ["extension"],
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "storyId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Video to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "text": { "type": "string" },
                  "published": { "type": "boolean", "default": false }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/extension/story/{storyId}/audio": {
      "post": {
        "tags": ["extension"],
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "storyId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Audio to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "text": { "type": "string" },
                  "imageId": { "type": "string" },
                  "published": { "type": "boolean", "default": false }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/2fa": {
      "post": {
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationTokenRequired" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dataUrl": { "type": "string", "format": "url" },
                    "otpURL": { "type": "string" },
                    "secret": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": { "email": { "type": "string" } }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/itemslist": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns chat items by list of ids",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } },
          {
            "in": "query",
            "name": "ids",
            "description": "coma separated ids of requested cards",
            "example": "1,2,3,4,5,6,7,8,9",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ModelCard" } }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/stories/{storyId}/items/{itemId}": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "storyId", "required": true, "schema": { "type": "number" } },
          { "in": "path", "name": "itemId", "required": true, "schema": { "type": "number" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ModelCard" } }
            }
          },
          "400": {
            "description": "Field validation error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorValidationModel" }
              }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/info": {
      "get": {
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" }
        ],
        "description": "Send in to about app to server. If app is to old and need be force updated in responce you have link to new app",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "state": {
                      "type": "string",
                      "example": "no_update",
                      "enum": ["no_update", "force_update"]
                    },
                    "link": {
                      "type": "string",
                      "example": "https://play.google.com/store/apps/details?id=io.tchop.strabag&hl=en"
                    }
                  }
                }
              }
            }
          },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/api/v3/me": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/UserInfo" },
                    {
                      "type": "object",
                      "required": ["token"],
                      "properties": { "settings": { "$ref": "#/components/schemas/UserSettings" } }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/news-feed": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "number" } },
          {
            "in": "query",
            "name": "timestamp",
            "description": "date string or number of milliseconds",
            "schema": { "type": "number" }
          },
          { "in": "query", "name": "offset", "schema": { "type": "number", "default": 0 } },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "number", "minimum": 1, "maximum": 1000, "default": 75 }
          },
          { "in": "query", "name": "reverse", "schema": { "type": "boolean" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["count", "data"],
                  "properties": {
                    "count": { "type": "number" },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          { "$ref": "#/components/schemas/ModelCard" },
                          {
                            "properties": {
                              "author": {
                                "properties": {
                                  "type": { "type": "string" },
                                  "name": { "type": "string" },
                                  "image": { "$ref": "#/components/schemas/ImageModel" }
                                }
                              },
                              "storyId": { "type": "number" },
                              "reactions": {
                                "type": "object",
                                "allOf": [
                                  { "$ref": "#/components/schemas/ReactionCountModel" },
                                  {
                                    "properties": {
                                      "myReaction": {
                                        "$ref": "#/components/schemas/ReactionEnumModel"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/organisation": {
      "get": {
        "tags": ["organisation"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationTokenRequired" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/OrganisationModel" } }
            }
          },
          "404": {
            "description": "Organisation does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "code": { "type": "string" }, "message": { "type": "string" } }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/organisation/users": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationTokenRequired" },
          { "in": "query", "name": "search", "required": true, "schema": { "type": "string" } },
          { "in": "query", "name": "offset", "schema": { "type": "number", "default": 0 } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["count", "data"],
                  "properties": {
                    "count": { "type": "number" },
                    "offset": { "type": "number" },
                    "data": {
                      "type": "array",
                      "items": {
                        "required": ["email", "id", "initials", "role", "roleScope", "screenName"],
                        "properties": {
                          "email": { "type": "string" },
                          "id": { "type": "number" },
                          "initials": { "type": "string" },
                          "role": { "type": "string" },
                          "roleScope": { "type": "string" },
                          "screenName": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/stories/{storyId}/items/{itemId}/reaction": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["channels"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "storyId", "schema": { "type": "number" }, "required": true },
          { "in": "path", "name": "itemId", "schema": { "type": "number" }, "required": true }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": { "type": "string", "enum": ["add", "remove", "replace"] },
                    "reactions": {
                      "allOf": [
                        { "$ref": "#/components/schemas/ReactionCountModel" },
                        {
                          "properties": {
                            "myReaction": { "$ref": "#/components/schemas/ReactionEnumModel" }
                          }
                        }
                      ]
                    },
                    "previousStatus": { "$ref": "#/components/schemas/ReactionEnumModel" },
                    "userType": { "type": "string", "enum": ["anonymous", "unique"] }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["url"],
                "properties": { "reaction": { "$ref": "#/components/schemas/ReactionEnumModel" } }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/login": {
      "post": {
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/UserInfo" },
                    {
                      "type": "object",
                      "required": ["token"],
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "bc402f28c60255f6af5057434587e5a41e71afb0"
                        },
                        "settings": { "$ref": "#/components/schemas/UserSettings" }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["pwd", "email"],
                "properties": {
                  "pwd": { "type": "string" },
                  "email": { "type": "string" },
                  "fcmToken": { "type": "string" },
                  "deviceToken": { "type": "string" },
                  "otp": { "type": "number" }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/logout": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "204": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fcmToken": { "type": "string" },
                  "deviceToken": { "type": "string" }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/fcm_token": {
      "post": {
        "tags": ["user"],
        "description": "Save newly updated firebase cloud messaging device token",
        "security": [{ "ApiMobileAuth": [] }],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "204": { "description": "OK" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["fcmToken"],
                "properties": {
                  "fcmToken": { "type": "string" },
                  "deviceToken": { "type": "string" }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/v3/user/{userId}": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "userId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserInfo" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          },
          "404": {
            "description": "NotFound",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          }
        }
      }
    },
    "/api/v3/user": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/UserInfo" } }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          }
        }
      }
    },
    "/api/v3/user/profile": {
      "put": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["user"],
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" }
        ],
        "responses": {
          "204": { "description": "OK" },
          "400": {
            "description": "validation error",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ErrorModel" } }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "screenName": { "type": "string", "minLength": 3, "maxLength": 100 },
                  "url": { "type": "string" },
                  "image": {
                    "description": "Profile picture to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "imageId": { "type": "string" }
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/items": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns a list of items of chat shared content",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } },
          { "in": "query", "name": "offset", "schema": { "type": "number", "default": 0 } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["data", "limit", "offset"],
                  "properties": {
                    "limit": { "type": "number" },
                    "offset": { "type": "number" },
                    "data": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Create shared item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": { "type": "string", "$ref": "#/components/schemas/CardEnumModel" },
                  "title": { "type": "string" },
                  "abstract": { "type": "string" },
                  "sourceName": { "type": "string" },
                  "image": { "type": "string", "format": "url" },
                  "imageId": { "type": "string" },
                  "quotePerson": { "type": "string" },
                  "quote": { "type": "string" },
                  "url": { "type": "string" },
                  "quotePersonImageId": { "type": "string" },
                  "quotePersonImage": { "type": "string", "format": "url" },
                  "quoteSource": { "type": "string" },
                  "quotePersonHandle": { "type": "string" },
                  "videoId": { "type": "string" },
                  "text": { "type": "string" },
                  "headline": { "type": "string" },
                  "quoteCreated": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "type": "string",
                    "description": "text message to send to pubnub"
                  }
                }
              }
            }
          },
          "description": "item to create",
          "required": true
        }
      }
    },
    "/api/v3/chats/{chatId}/items": {
      "get": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Returns a list of items of chat shared content",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "$ref": "#/components/parameters/UserInstanceIdHeader" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": { "type": "number", "default": 0 }
          },
          {
            "in": "query",
            "name": "ids",
            "description": "coma separated ids of requested cards",
            "example": "1,2,3,4,5,6,7,8,9",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["data", "limit", "offset"],
                  "properties": {
                    "limit": { "type": "number" },
                    "offset": { "type": "number" },
                    "data": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Create shared item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": { "type": "string", "$ref": "#/components/schemas/CardEnumModel" },
                  "title": { "type": "string" },
                  "abstract": { "type": "string" },
                  "sourceName": { "type": "string" },
                  "image": { "type": "string", "format": "url" },
                  "imageId": { "type": "string" },
                  "quotePerson": { "type": "string" },
                  "quote": { "type": "string" },
                  "url": { "type": "string" },
                  "quotePersonImageId": { "type": "string" },
                  "quotePersonImage": { "type": "string", "format": "url" },
                  "quoteSource": { "type": "string" },
                  "quotePersonHandle": { "type": "string" },
                  "videoId": { "type": "string" },
                  "text": { "type": "string" },
                  "headline": { "type": "string" },
                  "quoteCreated": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "type": "string",
                    "description": "text message to send to pubnub"
                  }
                }
              }
            }
          },
          "description": "item to create",
          "required": true
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/items/image": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Create shared image item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Image to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "description": "text message to send to pubnub",
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/chats/{chatId}/items/image": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Create shared image item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Image to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "description": "text message to send to pubnub",
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/items/video": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Create shared video item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Video to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "description": "text message to send to pubnub",
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/chats/{chatId}/items/video": {
      "post": {
        "security": [{ "ApiMobileAuth": [] }],
        "tags": ["chats"],
        "description": "Create shared video item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Video to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "description": "text message to send to pubnub",
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/channels/{channelId}/chats/{chatId}/items/audio": {
      "post": {
        "tags": ["chats"],
        "description": "Create shared audio item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/UserTokenHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "channelId", "required": true, "schema": { "type": "string" } },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Audio to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "imageId": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "description": "text message to send to pubnub",
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/chats/{chatId}/items/audio": {
      "post": {
        "tags": ["chats"],
        "description": "Create shared audio item in chat",
        "parameters": [
          { "$ref": "#/components/parameters/AppIdHeader" },
          { "$ref": "#/components/parameters/AppPlatformHeader" },
          { "$ref": "#/components/parameters/AppVersionHeader" },
          { "$ref": "#/components/parameters/UserTokenHeader" },
          { "$ref": "#/components/parameters/AppOrganisationToken" },
          { "in": "path", "name": "chatId", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["id"],
                  "properties": { "id": { "type": "string" } }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "Audio to upload.",
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": { "type": "string" },
                  "headline": { "type": "string" },
                  "imageId": { "type": "string" },
                  "published": { "type": "boolean", "default": true },
                  "formattedText": {
                    "description": "text message to send to pubnub",
                    "type": "string"
                  }
                },
                "required": ["file"]
              }
            }
          }
        }
      }
    },
    "/api/v3/mixes": {
      "get": {
        "tags": ["stream"],
        "security": [{ "ApiStreamAuth": [] }],
        "parameters": [
          { "in": "query", "name": "token", "required": true, "schema": { "type": "string" } }
        ],
        "deprecated": true,
        "servers": [
          {
            "url": "https://{channelSubdomain}-{organisationSubdomain}.tchop.io",
            "variables": {
              "channelSubdomain": { "default": "test" },
              "organisationSubdomain": { "default": "welcome" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ModelMixV3" } }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "AppIdHeader": {
        "name": "x-tchop-app-id",
        "in": "header",
        "required": true,
        "schema": { "type": "string" }
      },
      "AppPlatformHeader": {
        "name": "x-tchop-app-platform",
        "in": "header",
        "required": true,
        "schema": { "type": "string", "enum": ["android", "ios", "android-hockey", "ios-hockey"] }
      },
      "AppVersionHeader": {
        "name": "x-tchop-app-version",
        "in": "header",
        "required": true,
        "schema": { "type": "string" }
      },
      "UserTokenHeader": {
        "name": "x-tchop-token",
        "in": "header",
        "required": true,
        "description": "User token",
        "schema": { "type": "string" }
      },
      "AppOrganisationToken": {
        "name": "x-tchop-app-organisation-token",
        "in": "header",
        "schema": { "type": "string" }
      },
      "UserPublicKey": {
        "name": "x-tchop-user-public-key",
        "in": "header",
        "schema": { "type": "string" }
      },
      "UserSignedChallenge": {
        "name": "x-tchop-user-signed-challenge",
        "in": "header",
        "schema": { "type": "string" }
      },
      "AppOrganisationTokenRequired": {
        "name": "x-tchop-app-organisation-token",
        "in": "header",
        "required": true,
        "schema": { "type": "string" }
      },
      "UserInstanceIdHeader": {
        "name": "x-tchop-firebase-instance-id",
        "in": "header",
        "schema": { "type": "string" },
        "description": "Firebase Instance ID provides a unique identifier for each app instance and a mechanism to authenticate and authorize actions (example: sending FCM messages)"
      }
    },
    "securitySchemes": {
      "ApiStreamAuth": { "type": "apiKey", "in": "query", "name": "token" },
      "ApiIntegrationAuth": { "type": "apiKey", "in": "query", "name": "token" },
      "ApiMobileAuth": { "type": "apiKey", "in": "header", "name": "x-tchop-token" }
    },
    "schemas": {
      "ErrorModel": {
        "required": ["code", "message"],
        "properties": {
          "code": { "type": "string" },
          "message": { "type": "string" },
          "messageCode": { "type": "string" }
        }
      },
      "ErrorValidationModel": {
        "required": ["code", "message", "errors"],
        "properties": {
          "code": { "type": "string", "example": "" },
          "errors": {
            "type": "array",
            "items": {
              "required": ["code", "key", "message"],
              "properties": {
                "code": { "type": "string", "example": "already_exist" },
                "key": { "type": "string", "example": "subdomain" },
                "message": { "type": "string", "example": "Subdomain does already exist" }
              }
            }
          },
          "message": { "type": "string" }
        }
      },
      "UserInfo": {
        "required": ["id", "username", "email", "url"],
        "properties": {
          "id": { "type": "number", "example": 777 },
          "username": { "type": "string", "example": "Demo User" },
          "email": { "type": "string", "example": "demo@tchop.io" },
          "avatar": { "type": "string", "format": "url" },
          "url": { "type": "string", "format": "url" }
        }
      },
      "UserSettings": {
        "required": ["isAppLocked"],
        "properties": { "isAppLocked": { "type": "boolean" } }
      },
      "OrganisationModel": {
        "required": [
          "name",
          "subdomain",
          "locale",
          "allowToStoreOriginalImageFile",
          "twoFactorForce",
          "sessionExpirationTime",
          "appLockEnabled",
          "id",
          "uuid",
          "created",
          "isSystem",
          "pinnedStoryId",
          "hasPinnedMixes"
        ],
        "properties": {
          "name": { "type": "string" },
          "subdomain": { "type": "string" },
          "locale": { "type": "string" },
          "androidStoreLink": { "type": "string" },
          "androidAppId": { "type": "string" },
          "androidHokeyStoreLink": { "type": "string" },
          "androidAppHokeyId": { "type": "string" },
          "iosStoreLink": { "type": "string" },
          "iosAppId": { "type": "string" },
          "iosHokeyStoreLink": { "type": "string" },
          "iosAppHokeyId": { "type": "string" },
          "fcmServerKeyId": { "type": "number" },
          "allowToStoreOriginalImageFile": { "type": "string" },
          "twoFactorForce": { "type": "string" },
          "sessionExpirationTime": { "type": "string" },
          "appLockEnabled": { "type": "boolean" },
          "id": { "type": "number" },
          "uuid": { "type": "string" },
          "created": { "type": "string" },
          "isSystem": { "type": "boolean" },
          "pinnedStoryId": { "type": "number" },
          "hasPinnedMixes": { "type": "boolean" }
        }
      },
      "BaseMixModel": {
        "required": [
          "id",
          "title",
          "subtitle",
          "created",
          "updated",
          "ticker",
          "readOnly",
          "shareUrl",
          "previewUrl",
          "includeInNewsFeed"
        ],
        "properties": {
          "id": { "type": "number" },
          "title": { "type": "string", "example": "Welcome to tchop! Create your first card" },
          "subtitle": {
            "type": "string",
            "example": "This story is so empty, try and add some cards with content of your choice here! If you want to know more check our guide or feel free to play around freely."
          },
          "created": { "type": "string", "format": "dateTime" },
          "updated": { "type": "string", "format": "dateTime" },
          "ticker": { "type": "boolean" },
          "readOnly": { "type": "boolean" },
          "shareUrl": { "type": "string", "format": "url" },
          "previewUrl": { "type": "string", "format": "url" },
          "includeInNewsFeed": { "type": "boolean", "default": true },
          "displayItemUpdatedTime": { "type": "string" },
          "image": { "$ref": "#/components/schemas/ImageModel" }
        }
      },
      "ModelMixV3": {
        "allOf": [
          { "$ref": "#/components/schemas/BaseMixModel" },
          {
            "properties": {
              "cards": { "type": "array", "items": { "$ref": "#/components/schemas/ModelCard" } },
              "itemsNum": { "type": "number" }
            },
            "required": ["cards", "itemsNum"]
          }
        ]
      },
      "ImageModel": {
        "required": ["id", "statusCopyright", "rightholder", "thumb", "status"],
        "properties": {
          "id": { "type": "number" },
          "statusCopyright": { "type": "number" },
          "rightholder": { "type": "string" },
          "thumb": { "type": "string", "format": "url" },
          "status": { "type": "string", "enum": ["ok", "processing", "error"] },
          "url": { "type": "string", "format": "url" }
        }
      },
      "AudioModel": {
        "required": ["id", "thumb", "status"],
        "properties": {
          "id": { "type": "number" },
          "url": { "type": "string", "format": "url" },
          "thumb": { "type": "string", "format": "url" },
          "originalThumb": { "type": "string", "format": "url" },
          "status": { "type": "string" },
          "duration": { "type": "number" },
          "width": { "type": "number" },
          "height": { "type": "number" }
        }
      },
      "ModelCard": {
        "required": ["id", "type", "created", "updated", "published", "postedTime"],
        "properties": {
          "id": { "type": "number" },
          "type": { "type": "string", "$ref": "#/components/schemas/CardEnumModel" },
          "createdByLabel": { "type": "string" },
          "created": { "type": "string", "format": "dateTime" },
          "postedTime": { "type": "string", "format": "dateTime" },
          "updated": { "type": "string", "format": "dateTime" },
          "published": { "type": "boolean" },
          "position": { "type": "number" },
          "headline": { "type": "string" },
          "quotePerson": { "type": "string" },
          "quotePersonHandle": { "type": "string" },
          "quote": { "type": "string" },
          "title": { "type": "string" },
          "sourceName": { "type": "string" },
          "url": { "type": "string", "format": "url" },
          "abstract": { "type": "string" },
          "image": { "$ref": "#/components/schemas/ImageModel" },
          "audio": { "$ref": "#/components/schemas/AudioModel" },
          "styles": { "$ref": "#/components/schemas/CardStyleModel" },
          "author": { "$ref": "#/components/schemas/CardAuthorModel" }
        }
      },
      "CardAuthorModel": {
        "type": "object",
        "required": ["type", "name"],
        "properties": {
          "type": { "type": "string", "enum": ["curate-backend", "api"] },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "image": { "$ref": "#/components/schemas/ImageModel" }
        }
      },
      "ReactionEnumModel": {
        "type": "string",
        "enum": ["like", "love", "haha", "wow", "sad", "angry"]
      },
      "CardEnumModel": {
        "type": "string",
        "enum": ["article", "image", "video", "quote", "editorial", "audio"]
      },
      "ReactionCountModel": {
        "description": "The number of reactions to each type",
        "properties": {
          "like": { "type": "number" },
          "love": { "type": "number" },
          "haha": { "type": "number" },
          "wow": { "type": "number" },
          "sad": { "type": "number" },
          "angry": { "type": "number" }
        }
      },
      "MediaEXIFModel": {
        "properties": {
          "gps": {
            "required": ["x", "y"],
            "properties": { "x": { "type": "number" }, "y": { "type": "number" } }
          }
        }
      },
      "CardStyleModel": {
        "properties": {
          "showAuthor": { "type": "boolean" },
          "teaserStyle": {
            "description": "Alternative UI Templates for article cards",
            "type": "string",
            "enum": ["standard", "small_with_text", "small_without_text", "big_without_text"]
          }
        }
      },
      "QuoteModel": {
        "properties": {
          "quotePerson": { "type": "string" },
          "quotePersonHandle": { "type": "string" },
          "quote": { "type": "string" },
          "quoteSource": { "type": "string" },
          "image": { "type": "string", "format": "url" },
          "quotePersonImage": { "type": "string", "format": "url" },
          "quoteCreated": { "type": "string", "format": "data-time" }
        }
      },
      "ArticleModel": {
        "properties": {
          "title": { "type": "string" },
          "abstract": { "type": "string" },
          "sourceName": { "type": "string" },
          "image": { "type": "string", "format": "url" }
        }
      }
    }
  },
  "tags": [
    { "name": "user", "description": "User management and session controlling" },
    { "name": "channels", "description": "Get channels list and channel info" },
    {
      "name": "extension",
      "description": "Parsing images, articles and social posts (twitter, facebook, instagram)"
    },
    {
      "name": "stream",
      "description": "The Output Stream enables you to deliver content of your channel to different platforms"
    }
  ]
}
